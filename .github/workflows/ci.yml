name: CI

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Format check
        run: |
          npm run format
          if ! git diff --exit-code; then
            echo "❌ Code formatting issues detected. Please run 'npm run format' and commit the changes."
            exit 1
          fi
          echo "✅ Code formatting is correct"

      - name: Bundle
        run: npm run bundle

  deploy:
    name: Deploy to R2
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    environment: Deployment

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Bundle
        run: npm run bundle

      - name: Extract app name and version
        id: extract
        run: |
          RAW_APP_NAME=$(basename $PWD)
          APP_NAME=${RAW_APP_NAME#flows-app-}
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create tarball and calculate checksum
        id: package
        run: |
          CHECKSUM=$(sha256sum bundle.tar.gz | cut -d' ' -f1)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Upload to R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto
        run: |
          aws s3 cp bundle.tar.gz s3://${{ secrets.R2_BUCKET }}/core/apps/${{ steps.extract.outputs.app_name }}/versions/${{ steps.extract.outputs.version }}.tar.gz \
            --endpoint-url ${{ secrets.R2_ENDPOINT_URL }} \
            --metadata sha256=${{ steps.package.outputs.checksum }}
